//–ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏–º–≤–æ–ª—ã —á–µ—Ä–µ–∑ ASCII  .
//
//–ù—É–∂–Ω–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å:
//
//üî§ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤
//
//üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª
//
//üìù –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
//
//üÖ∞Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–ª–∞—Å–Ω—ã—Ö
//
//üÖ±Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≥–ª–∞—Å–Ω—ã—Ö
//
//‚ûï –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è (—Ç–æ—á–∫–∞, –∑–∞–ø—è—Ç–∞—è, !, ?, ;, : )
//
// ‚è± –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
//
//–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ—Ç–æ–∫–∏

import java.nio.charset.StandardCharsets;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

import static java.nio.charset.StandardCharsets.UTF_8;

public class Main {
    public static void main(String[] args) throws IOException, InterruptedException {
        long start = System.currentTimeMillis();

        String content = new String(Files.readAllBytes
                (Paths.get("D:\\Java\\Lesson75\\Thread2\\src\\text.txt")),
                StandardCharsets.UTF_8);

        ExecutorService executor = Executors.newFixedThreadPool(6);

        executor.submit(() -> {
            int words = content.trim().split("\\s+").length;
            System.out.println("–°–ª–æ–≤" + words);
        });
        executor.submit(() -> {
            int numbers = 0;
            for (String word : content.split("\\s+")) {
                if (word.matches("\\d+")) numbers++;

            }
            System.out.println("–ß–∏—Å–µ–ª" + numbers);
        });
        executor.submit(() -> {
            int sentences = content.split("[.!?]").length;
            System.out.println("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π" + sentences);
        });

        executor.submit(() -> {
            int vowels = 0;
            for (char ch : content.toLowerCase().toCharArray()) {
                if ("–∞–µ—ë–∏–æ—É—ã—ç—é—èaieou".indexOf(ch) != -1) vowels++;
            }
            System.out.println("–ì–ª–∞—Å–Ω—ã—Ö" + vowels);
        });

        executor.submit(() -> {
            int consonants = 0;
            for (char ch : content.toLowerCase().toCharArray()) {
                if ("–±–≤–≥–¥–∂–∑–∫–ª–º–Ω–ø—Ä—Å—Ç—Ñ—Ö—Ü—á—à—âbcdfjhgklmnpqrstvwxyz".indexOf(ch) != -1)consonants++;
            }
            System.out.println("–°–æ–≥–ª–∞—Å–Ω—ã—Ö" + consonants);
        });
        executor.submit(() -> {
            int punctuation = 0;
            for (char ch : content.toCharArray()) {
                if (".,!?:;".indexOf(ch) != -1) punctuation++;
            }
            System.out.println("–ó–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è" + punctuation);

        });

        executor.shutdown();
        executor.awaitTermination(10, TimeUnit.SECONDS);

        long end = System.currentTimeMillis();
        System.out.println("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–∏—è: " + (end - start) + "–º—Å");

    }
}